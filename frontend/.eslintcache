[{"/home/dillon/appAcademyReactModule/authenticate-me/frontend/src/index.js":"1","/home/dillon/appAcademyReactModule/authenticate-me/frontend/src/App.js":"2","/home/dillon/appAcademyReactModule/authenticate-me/frontend/src/store/index.js":"3","/home/dillon/appAcademyReactModule/authenticate-me/frontend/src/store/csrf.js":"4","/home/dillon/appAcademyReactModule/authenticate-me/frontend/src/store/session.js":"5"},{"size":813,"mtime":1611360746383,"results":"6","hashOfConfig":"7"},{"size":84,"mtime":1611355545420,"results":"8","hashOfConfig":"7"},{"size":705,"mtime":1611361234523,"results":"9","hashOfConfig":"7"},{"size":1554,"mtime":1611357065767,"results":"10","hashOfConfig":"7"},{"size":1392,"mtime":1611363262927,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1l06gl1",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/home/dillon/appAcademyReactModule/authenticate-me/frontend/src/index.js",[],["24","25"],"/home/dillon/appAcademyReactModule/authenticate-me/frontend/src/App.js",[],"/home/dillon/appAcademyReactModule/authenticate-me/frontend/src/store/index.js",[],"/home/dillon/appAcademyReactModule/authenticate-me/frontend/src/store/csrf.js",[],"/home/dillon/appAcademyReactModule/authenticate-me/frontend/src/store/session.js",["26"],"// frontend/src/store/session.js\nimport { fetch } from './csrf';\n\nconst SET_USER = 'session/setUser';\nconst REMOVE_USER = 'session/removeUser';\n\nconst setUser = (user) => {\n  return {\n    type: SET_USER,\n    payload: user,\n  };\n};\n\nconst removeUser = () => {\n  return {\n    type: REMOVE_USER,\n  };\n};\n\nexport const login = (user) => async (dispatch) => {\n  const { credential, password } = user;\n  const response = await fetch('/api/session', {\n    method: 'POST',\n    body: JSON.stringify({\n      credential,\n      password,\n    }),\n  });\n  dispatch(setUser(response.data.user));\n  return response;\n};\n\nconst initialState = { user: null };\n\nconst sessionReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state);\n      newState.user = action.payload;\n      return newState;\n    case REMOVE_USER:\n      newState = Object.assign({}, state);\n      newState.user = null;\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default sessionReducer;\n\n\n      // const initialState = { user: null }\n\n\n      // const sessionReducer = (state = initialState, action) => {\n\n      //   const newState = {\n      //     ...state,\n      //   }\n\n      //   switch (action.type) {\n\n      //     default:\n      //       return newState;\n      //   }\n      // }\n\n      // export default sessionReducer;\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":14,"column":7,"nodeType":"33","messageId":"34","endLine":14,"endColumn":17},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'removeUser' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]