[{"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/index.js":"1","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/App.js":"2","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/store/session.js":"3","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/store/csrf.js":"4","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/store/index.js":"5","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/SignupFormPage/index.js":"6","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/Navigation/index.js":"7","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/LoginFormPage/index.js":"8","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/Navigation/ProfileButton.js":"9","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/HomePage/index.js":"10","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/store/notes.js":"11","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/Bookmarked/index.js":"12","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/GlobalNotes/index.js":"13","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/PersonalNotes/index.js":"14","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/QuillEditor/index.js":"15","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/store/bookmark.js":"16"},{"size":812,"mtime":1611684035338,"results":"17","hashOfConfig":"18"},{"size":1076,"mtime":1611526505740,"results":"19","hashOfConfig":"18"},{"size":2190,"mtime":1611793332327,"results":"20","hashOfConfig":"18"},{"size":1554,"mtime":1611357065767,"results":"21","hashOfConfig":"18"},{"size":911,"mtime":1612140348358,"results":"22","hashOfConfig":"18"},{"size":2102,"mtime":1612158919906,"results":"23","hashOfConfig":"18"},{"size":1237,"mtime":1612153837378,"results":"24","hashOfConfig":"18"},{"size":1548,"mtime":1612158516948,"results":"25","hashOfConfig":"18"},{"size":1425,"mtime":1612140348311,"results":"26","hashOfConfig":"18"},{"size":4345,"mtime":1612140348297,"results":"27","hashOfConfig":"18"},{"size":6615,"mtime":1612140348360,"results":"28","hashOfConfig":"18"},{"size":1411,"mtime":1612140348267,"results":"29","hashOfConfig":"18"},{"size":1881,"mtime":1612140348285,"results":"30","hashOfConfig":"18"},{"size":2010,"mtime":1612140348322,"results":"31","hashOfConfig":"18"},{"size":4255,"mtime":1612140348337,"results":"32","hashOfConfig":"18"},{"size":3048,"mtime":1612140348348,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"fytful",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/index.js",[],["70","71"],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/App.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/store/session.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/store/csrf.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/store/index.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/SignupFormPage/index.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/Navigation/index.js",["72","73","74"],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/LoginFormPage/index.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/Navigation/ProfileButton.js",["75"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport * as sessionActions from '../../store/session';\n\nfunction ProfileButton({ user }) {\n  const dispatch = useDispatch();\n  const [showMenu, setShowMenu] = useState(false);\n\n  const openMenu = () => {\n    if (showMenu) return;\n    setShowMenu(true);\n  };\n\n  useEffect(() => {\n    if (!showMenu) return;\n\n    const closeMenu = () => {\n      setShowMenu(false);\n    };\n\n    document.addEventListener('click', closeMenu);\n\n    return () => document.removeEventListener(\"click\", closeMenu);\n  }, [showMenu]);\n\n  const logout = (e) => {\n    e.preventDefault();\n    dispatch(sessionActions.logout());\n  };\n\n  return (\n    <>\n      <button onClick={openMenu}>\n        <i className=\"fas fa-user-circle\" />\n      </button>\n      {showMenu && (\n        <ul className=\"profile-dropdown\">\n          <li>{user.username}</li>\n          <li>{user.email}</li>\n          <li>\n            <button onClick={logout}>Log Out</button>\n          </li>\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default ProfileButton;\n","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/HomePage/index.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/store/notes.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/Bookmarked/index.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/GlobalNotes/index.js",["76","77"],"import { useSelector, useDispatch } from 'react-redux'\nimport { useEffect } from 'react';\nimport { getGlobalNotes } from '../../store/notes';\nimport { NavLink } from 'react-router-dom';\n\nimport './GlobalNotes.css'\n//map over the notes and hav\nfunction GlobalNotes() {\n\n  const notes = useSelector(state => state.notes.notes);\n\n  const dispatch = useDispatch();\n  // const {id} = useParams();\n  useEffect(() => {\n    dispatch(getGlobalNotes())\n  }, [dispatch])\n\n  //console.log(notes)\n  return (\n    <div>\n      <h1>Global Notes</h1>\n      <div className=\"all-notes\">\n        {notes.map((note, idx) => {\n          return (\n            <>\n              <NavLink to={`/global/${note.id}`} className=\"nav-link\" key={idx}>\n                <div className=\"each-note\">\n                  <div className=\"title\">{note.title}</div>\n                  <div className=\"content\">{note.content}</div>\n                </div>\n              </NavLink>\n            </>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\n\nexport default GlobalNotes;\n","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/PersonalNotes/index.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/QuillEditor/index.js",["78","79","80"],"import ReactQuill from 'react-quill'\nimport './QuillEditor.css'\nimport './nav-bar-for-editor.css'\nimport { useEffect, useState } from 'react';\nimport { getNoteById, deleteNoteById, updateStatusById, editNoteById, makeFileCopyOfNote } from '../../store/notes'\nimport { getBookmark, updateBookmarkById, newBookmark } from '../../store/bookmark'\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { green } from '@material-ui/core/colors';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n//useParams here grab the noteId called id\nfunction QuillEditor() {\n\n\n  const { id } = useParams();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const note = useSelector(state => (state.notes.currentNote !== undefined) ? state.notes.currentNote[0] : '')\n  const userIdNote = useSelector(state => (state.notes.currentNote !== undefined) ? state.notes.currentNote[0].userId : '')\n  const stateOfBookmark = useSelector(state => (state.bookmark.currentBookmark !== undefined) ? state.bookmark.currentBookmark.isBookmarked : '')\n  const user = useSelector(state => state.session.user.id)\n  const toggleCheck = (user === userIdNote) ? true : null;\n  const userId = (note !== undefined) ? note.userId : null;\n\n\n  const deleteNote = async (e) => {\n    e.preventDefault();\n\n    await dispatch(deleteNoteById(note.id))\n\n    history.push(`/personal`)\n  }\n\n  const makeFileCopy = async (e) => {\n    e.preventDefault();\n\n\n    await dispatch(makeFileCopyOfNote(user, note.title, note.content))\n\n    history.push('/personal')\n\n  }\n\n  //for changing routes\n  useEffect(() => {\n    if (id !== undefined) {\n\n      dispatch(getNoteById(id))\n      dispatch(getBookmark(user, id))\n\n    }\n  }, [dispatch, id])\n\n\n\n  return (\n    <div>\n      <div className=\"rte-nav\">\n\n        {/* button to delete a note specific to the user */}\n        {toggleCheck && <button type=\"button\" className=\"delete-button\" onClick={deleteNote}><DeleteIcon /></button>}\n\n        {/* container for the public/private switch */}\n        {toggleCheck && <div className=\"private-public-toggle\">\n          <div className=\"toggle-label\">Private</div>\n          <div className=\"onoffswitch2\">\n            <input type=\"checkbox\"\n              name=\"onoffswitch2\"\n              class=\"onoffswitch2-checkbox\"\n              id=\"myonoffswitch2\"\n              onClick={() => dispatch(updateStatusById(note.id))}\n              checked={note.isPublic}>\n\n            </input>\n            <label class=\"onoffswitch2-label\" for=\"myonoffswitch2\">\n            </label>\n          </div>\n          <div className=\"toggle-label\">Public</div>\n        </div>}\n\n        {/* {(!toggleCheck) && <button type=\"button\" className=\"file-copy\" onClick={makeFileCopy}><FileCopyIcon /></button>} */}\n        {<button type=\"button\" className=\"file-copy\" onClick={makeFileCopy}><FileCopyIcon /></button>}\n\n        {/* button for the bookmark logic */}\n        <button className=\"bookmark-button\" onClick={() => dispatch(updateBookmarkById(user, note.id))}>\n          {/* <button className=\"bookmark-button\" onClick={() => console.log('hello')}> */}\n          {(stateOfBookmark === true) && <BookmarkIcon style={{ color: green[500] }} />}\n          {(stateOfBookmark === false) && <BookmarkBorderIcon style={{ color: green[500] }} />}\n        </button>\n\n\n      </div>\n      {/* Determines either a readonly rte or editable rte */}\n      {\n        (user !== userId) && <ReactQuill theme=\"snow\"\n          value={note ? `<h1>${note.title}</h1><p>${note.content}</p>` : ''}\n          readOnly={true}\n        />\n      }\n      {\n        (user === userId) && <ReactQuill theme=\"snow\"\n          value={note ? `<h1>${note.title}</h1><p>${note.content}</p>` : ''}\n          onChange={(value, delta, source, editor) => {\n            if (source === 'user') {\n\n              dispatch(editNoteById(note.id, value))\n            }\n            //setSaveButton(true)\n          }}\n        // onKeyUp={() => setSaveButton(true)}\n\n        />\n      }\n    </div>\n\n  )\n}\n\nexport default QuillEditor;\n","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/store/bookmark.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":4,"column":8,"nodeType":"87","messageId":"88","endLine":4,"endColumn":21},{"ruleId":"89","severity":1,"message":"90","line":23,"column":13,"nodeType":"91","endLine":23,"endColumn":58},{"ruleId":"89","severity":1,"message":"90","line":26,"column":13,"nodeType":"91","endLine":26,"endColumn":59},{"ruleId":"89","severity":1,"message":"90","line":39,"column":9,"nodeType":"91","endLine":39,"endColumn":47},{"ruleId":"85","severity":1,"message":"92","line":10,"column":11,"nodeType":"87","messageId":"88","endLine":10,"endColumn":13},{"ruleId":"85","severity":1,"message":"93","line":13,"column":9,"nodeType":"87","messageId":"88","endLine":13,"endColumn":13},{"ruleId":"85","severity":1,"message":"94","line":4,"column":21,"nodeType":"87","messageId":"88","endLine":4,"endColumn":29},{"ruleId":"85","severity":1,"message":"95","line":6,"column":43,"nodeType":"87","messageId":"88","endLine":6,"endColumn":54},{"ruleId":"96","severity":1,"message":"97","line":56,"column":6,"nodeType":"98","endLine":56,"endColumn":20,"suggestions":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'LoginFormPage' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'id' is assigned a value but never used.","'note' is assigned a value but never used.","'useState' is defined but never used.","'newBookmark' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Update the dependencies array to be: [dispatch, id, user]",{"range":"105","text":"106"},[1935,1949],"[dispatch, id, user]"]