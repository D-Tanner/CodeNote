[{"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/index.js":"1","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/App.js":"2","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/store/session.js":"3","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/store/csrf.js":"4","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/store/index.js":"5","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/SignupFormPage/index.js":"6","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/Navigation/index.js":"7","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/LoginFormPage/index.js":"8","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/Navigation/ProfileButton.js":"9","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/HomePage/index.js":"10","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/store/notes.js":"11","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/Bookmarked/index.js":"12","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/GlobalNotes/index.js":"13","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/PersonalNotes/index.js":"14","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/QuillEditor/index.js":"15","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/store/bookmark.js":"16","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/context/search.js":"17","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/SearchBar/SearchBar.js":"18"},{"size":909,"mtime":1616023003598,"results":"19","hashOfConfig":"20"},{"size":1076,"mtime":1611526505740,"results":"21","hashOfConfig":"20"},{"size":2190,"mtime":1611793332327,"results":"22","hashOfConfig":"20"},{"size":1554,"mtime":1611357065767,"results":"23","hashOfConfig":"20"},{"size":911,"mtime":1612140348358,"results":"24","hashOfConfig":"20"},{"size":2102,"mtime":1612159101171,"results":"25","hashOfConfig":"20"},{"size":1237,"mtime":1612159101167,"results":"26","hashOfConfig":"20"},{"size":1927,"mtime":1616020595536,"results":"27","hashOfConfig":"20"},{"size":1425,"mtime":1612140348311,"results":"28","hashOfConfig":"20"},{"size":4469,"mtime":1616024999846,"results":"29","hashOfConfig":"20"},{"size":6309,"mtime":1616021862361,"results":"30","hashOfConfig":"20"},{"size":1404,"mtime":1616021862324,"results":"31","hashOfConfig":"20"},{"size":2015,"mtime":1616020595528,"results":"32","hashOfConfig":"20"},{"size":1993,"mtime":1616021862333,"results":"33","hashOfConfig":"20"},{"size":4515,"mtime":1616020595543,"results":"34","hashOfConfig":"20"},{"size":2735,"mtime":1616021862353,"results":"35","hashOfConfig":"20"},{"size":703,"mtime":1616022971706,"results":"36","hashOfConfig":"20"},{"size":3908,"mtime":1616026829706,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fytful",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/index.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/App.js",[],["78","79"],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/store/session.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/store/csrf.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/store/index.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/SignupFormPage/index.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/Navigation/index.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/LoginFormPage/index.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/Navigation/ProfileButton.js",["80"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport * as sessionActions from '../../store/session';\n\nfunction ProfileButton({ user }) {\n  const dispatch = useDispatch();\n  const [showMenu, setShowMenu] = useState(false);\n\n  const openMenu = () => {\n    if (showMenu) return;\n    setShowMenu(true);\n  };\n\n  useEffect(() => {\n    if (!showMenu) return;\n\n    const closeMenu = () => {\n      setShowMenu(false);\n    };\n\n    document.addEventListener('click', closeMenu);\n\n    return () => document.removeEventListener(\"click\", closeMenu);\n  }, [showMenu]);\n\n  const logout = (e) => {\n    e.preventDefault();\n    dispatch(sessionActions.logout());\n  };\n\n  return (\n    <>\n      <button onClick={openMenu}>\n        <i className=\"fas fa-user-circle\" />\n      </button>\n      {showMenu && (\n        <ul className=\"profile-dropdown\">\n          <li>{user.username}</li>\n          <li>{user.email}</li>\n          <li>\n            <button onClick={logout}>Log Out</button>\n          </li>\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default ProfileButton;\n","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/HomePage/index.js",["81","82","83","84"],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/store/notes.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/Bookmarked/index.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/GlobalNotes/index.js",["85","86"],"import { useSelector, useDispatch } from 'react-redux'\nimport { useEffect } from 'react';\nimport { getGlobalNotes } from '../../store/notes';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { getBookmark, newBookmark } from '../../store/bookmark'\n\nimport './GlobalNotes.css'\n//map over the notes and hav\nfunction GlobalNotes() {\n  const { id } = useParams();\n  const notes = useSelector(state => state.notes.notes);\n  const noteId = useSelector(state => (state.notes.currentNote !== undefined) ? state.notes.currentNote[0] : '')\n  const note = useSelector(state => (state.notes.currentNote !== undefined) ? state.notes.currentNote[0] : '')\n  const user = useSelector(state => state.session.user.id)\n\n  const dispatch = useDispatch();\n  // const {id} = useParams();\n  useEffect(() => {\n    dispatch(getGlobalNotes())\n  }, [dispatch])\n\n  const checkForBookmark = async (note) => {\n\n    let currentBookmark = await dispatch(getBookmark(user, note.id))\n    //console.log(\"HERERERE\", currentBookmark)\n    if (currentBookmark.data.length === 0) {\n      await dispatch(newBookmark(user, note.id))\n    }\n  }\n\n\n  //console.log(notes)\n  return (\n    <div>\n      <h1 class=\"note-page-title\">Global Notes</h1>\n      <div className=\"all-notes\">\n        {notes.map((note, idx) => {\n          return (\n            <>\n              <NavLink to={`/global/${note.id}`} className=\"nav-link\" key={idx} onClick={() => checkForBookmark(note)}>\n                <div className={(noteId.id === note.id) ? \"selected-note each-note\" : \"each-note\"}>\n                  <div className=\"title\">{note.title}</div>\n                  {/* <div className=\"content\">{note.content}</div> */}\n                  {/* <div className=\"user-id\">{note.}</div> */}\n                </div>\n              </NavLink>\n            </>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\n\nexport default GlobalNotes;\n","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/PersonalNotes/index.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/QuillEditor/index.js",["87","88","89"],"import ReactQuill from 'react-quill'\nimport './QuillEditor.css'\nimport './nav-bar-for-editor.css'\nimport { useEffect, useState } from 'react';\nimport { getNoteById, deleteNoteById, updateStatusById, editNoteById, makeFileCopyOfNote } from '../../store/notes'\nimport { getBookmark, updateBookmarkById, newBookmark } from '../../store/bookmark'\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { green } from '@material-ui/core/colors';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport grey from '@material-ui/core/colors/grey';\n\n//useParams here grab the noteId called id\nfunction QuillEditor() {\n\n\n\n  const { id } = useParams();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const note = useSelector(state => (state.notes.currentNote !== undefined) ? state.notes.currentNote[0] : '')\n  const userIdNote = useSelector(state => (state.notes.currentNote !== undefined) ? state.notes.currentNote[0].userId : '')\n  const stateOfBookmark = useSelector(state => (state.bookmark.currentBookmark !== undefined) ? state.bookmark.currentBookmark.isBookmarked : '')\n  const user = useSelector(state => state.session.user.id)\n  const toggleCheck = (user === userIdNote) ? true : null;\n  const userId = (note !== undefined) ? note.userId : null;\n\n\n  const deleteNote = async (e) => {\n    e.preventDefault();\n\n    await dispatch(deleteNoteById(note.id))\n\n    // history.push(`/personal`)\n  }\n\n  const makeFileCopy = async (e) => {\n    e.preventDefault();\n\n\n    let copied = await dispatch(makeFileCopyOfNote(user, note.title, note.content))\n    console.log(copied)\n    history.push(`/personal/${copied.data.id}`)\n\n  }\n\n  //for changing routes\n  useEffect(() => {\n    if (id !== undefined) {\n\n      dispatch(getNoteById(id))\n      dispatch(getBookmark(user, id))\n\n    }\n  }, [dispatch, id])\n\n\n\n  return (\n    <div>\n      <div className=\"rte-nav\">\n\n        {/* button to delete a note specific to the user */}\n        {toggleCheck && <button type=\"button\" className=\"delete-button\" onClick={deleteNote}><DeleteIcon /></button>}\n\n        {/* container for the public/private switch */}\n        {toggleCheck && <div className=\"private-public-toggle\">\n          <div className=\"toggle-label\">Private</div>\n          <div className=\"onoffswitch2\">\n            <input type=\"checkbox\"\n              name=\"onoffswitch2\"\n              class=\"onoffswitch2-checkbox\"\n              id=\"myonoffswitch2\"\n              onClick={() => dispatch(updateStatusById(note.id))}\n              checked={note.isPublic}>\n\n            </input>\n            <label class=\"onoffswitch2-label\" for=\"myonoffswitch2\">\n            </label>\n          </div>\n          <div className=\"toggle-label\">Public</div>\n        </div>}\n\n\n        {\n          <div className=\"tooltip\">\n            <div>\n              <button type=\"button\" className=\"file-copy\" onClick={makeFileCopy}><FileCopyIcon style={{ color: grey[400] }} /></button>\n            </div>\n            <div class=\"tooltiptext\">Copy</div>\n          </div>}\n\n        {/* button for the bookmark logic */}\n        <button className=\"bookmark-button\" onClick={() => dispatch(updateBookmarkById(user, note.id))}>\n\n          {(stateOfBookmark === true) && <BookmarkIcon style={{ color: green[500] }} />}\n          {(stateOfBookmark === false) && <BookmarkBorderIcon style={{ color: green[500] }} />}\n        </button>\n\n\n      </div>\n      {/* Determines either a readonly rte or editable rte */}\n      {\n        (user !== userId) && <ReactQuill theme=\"snow\"\n          value={note ? `<h1>${note.title}</h1><p>${note.content}</p>` : ''}\n          readOnly={true}\n        />\n      }\n      {\n        (user === userId) && <ReactQuill theme=\"snow\"\n          value={note ? `<h1>${note.title}</h1><p>${note.content}</p>` : ''}\n          onChange={(value, delta, source, editor) => {\n            if (source === 'user') {\n              if (value.length <= 102400) {\n\n                dispatch(editNoteById(note.id, value))\n              } else {\n                window.alert('File size too large! Either delete an image or move it to another note.')\n              }\n            }\n            //setSaveButton(true)\n          }}\n        // onKeyUp={() => setSaveButton(true)}\n\n        />\n      }\n    </div>\n\n  )\n}\n\nexport default QuillEditor;\n","/home/dillon/appAcademyReactModule/CodeNote/frontend/src/store/bookmark.js",[],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/context/search.js",["90"],"/home/dillon/appAcademyReactModule/CodeNote/frontend/src/components/SearchBar/SearchBar.js",["91","92","93","94","95","96","97","98","99","100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":39,"column":9,"nodeType":"107","endLine":39,"endColumn":47},{"ruleId":"108","severity":1,"message":"109","line":10,"column":10,"nodeType":"110","messageId":"111","endLine":10,"endColumn":24},{"ruleId":"108","severity":1,"message":"112","line":20,"column":16,"nodeType":"110","messageId":"111","endLine":20,"endColumn":21},{"ruleId":"113","severity":1,"message":"114","line":87,"column":38,"nodeType":"107","endLine":87,"endColumn":116},{"ruleId":"113","severity":1,"message":"114","line":88,"column":38,"nodeType":"107","endLine":88,"endColumn":92},{"ruleId":"108","severity":1,"message":"115","line":11,"column":11,"nodeType":"110","messageId":"111","endLine":11,"endColumn":13},{"ruleId":"108","severity":1,"message":"116","line":14,"column":9,"nodeType":"110","messageId":"111","endLine":14,"endColumn":13},{"ruleId":"108","severity":1,"message":"117","line":4,"column":21,"nodeType":"110","messageId":"111","endLine":4,"endColumn":29},{"ruleId":"108","severity":1,"message":"118","line":6,"column":43,"nodeType":"110","messageId":"111","endLine":6,"endColumn":54},{"ruleId":"119","severity":1,"message":"120","line":57,"column":6,"nodeType":"121","endLine":57,"endColumn":20,"suggestions":"122"},{"ruleId":"108","severity":1,"message":"123","line":9,"column":8,"nodeType":"110","messageId":"111","endLine":9,"endColumn":16},{"ruleId":"108","severity":1,"message":"124","line":1,"column":27,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},{"ruleId":"108","severity":1,"message":"109","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":24},{"ruleId":"108","severity":1,"message":"125","line":3,"column":23,"nodeType":"110","messageId":"111","endLine":3,"endColumn":34},{"ruleId":"108","severity":1,"message":"126","line":58,"column":9,"nodeType":"110","messageId":"111","endLine":58,"endColumn":21},{"ruleId":"108","severity":1,"message":"127","line":59,"column":9,"nodeType":"110","messageId":"111","endLine":59,"endColumn":21},{"ruleId":"108","severity":1,"message":"128","line":60,"column":9,"nodeType":"110","messageId":"111","endLine":60,"endColumn":19},{"ruleId":"108","severity":1,"message":"129","line":62,"column":10,"nodeType":"110","messageId":"111","endLine":62,"endColumn":16},{"ruleId":"108","severity":1,"message":"130","line":62,"column":18,"nodeType":"110","messageId":"111","endLine":62,"endColumn":27},{"ruleId":"108","severity":1,"message":"131","line":63,"column":10,"nodeType":"110","messageId":"111","endLine":63,"endColumn":17},{"ruleId":"108","severity":1,"message":"132","line":63,"column":19,"nodeType":"110","messageId":"111","endLine":63,"endColumn":29},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useNoteContext' is defined but never used.","Identifier","unusedVar","'green' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'id' is assigned a value but never used.","'note' is assigned a value but never used.","'useState' is defined but never used.","'newBookmark' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["135"],"'ReactDOM' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'bookmarkPage' is assigned a value but never used.","'personalPage' is assigned a value but never used.","'globalPage' is assigned a value but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'matches' is assigned a value but never used.","'setMatches' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},"Update the dependencies array to be: [dispatch, id, user]",{"range":"138","text":"139"},[1993,2007],"[dispatch, id, user]"]